[project]
name = "lakebase-foreachwriter"
version = "0.1.0"
description = "PySpark Lakebase (Postgres) Writer"
readme = "README.md"
authors = [
    { name = "Christopher Grant", email = "chris.grant@databricks.com" }
]
license = { text = "Apache-2.0" }
requires-python = ">=3.12"
keywords = ["pyspark", "lakebase", "postgres", "streaming", "databricks"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
dependencies = [
    "databricks-connect==16.4.1",
    "databricks-sdk==0.57.0",
    "psycopg==3.2.9",
]

[project.urls]
Homepage = "https://github.com/databricks/lakebase-foreachwriter"
Repository = "https://github.com/databricks/lakebase-foreachwriter"
Issues = "https://github.com/databricks/lakebase-foreachwriter/issues"
Changelog = "https://github.com/databricks/lakebase-foreachwriter/blob/main/CHANGELOG.md"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-mock",
    "pytest-cov>=4.0.0",
    "ruff>=0.12.2",
    "ty>=0.0.1a14",
    "python-dotenv>=1.1.1",
    "pre-commit>=3.6.0",
    "scikit-learn>=1.7.1",
]

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--cov=src/lakebase_foreachwriter",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=80",
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*", "src/**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
